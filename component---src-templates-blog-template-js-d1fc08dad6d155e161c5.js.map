{"version":3,"sources":["webpack:///./src/hooks/mediaQuery.js","webpack:///./src/hooks/useToggle.js","webpack:///./src/components/authorAside.js","webpack:///./src/templates/blogTemplate.js"],"names":["useMediaQuery","query","useState","matches","setMatches","useEffect","media","window","matchMedia","listener","addListener","removeListener","useToggle","initialState","isToggled","setIsToggled","React","useCallback","state","Container","styled","div","MobileContainer","AuthorAside","mobile","author","date","authorImage","authorBio","setToggle","className","fluid","alt","onClick","Template","post","data","markdownRemark","isPageWide","devices","tablet","frontmatter","title","subtitle","childImageSharp","featuredImage","PageContainer","dangerouslySetInnerHTML","__html","html","mobileL","laptop"],"mappings":"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","file":"component---src-templates-blog-template-js-d1fc08dad6d155e161c5.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useMediaQuery = (query) => {\r\n  const [matches, setMatches] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const media = window.matchMedia(query);\r\n    if (media.matches !== matches) {\r\n      setMatches(media.matches);\r\n    }\r\n    const listener = () => {\r\n      setMatches(media.matches);\r\n    };\r\n    media.addListener(listener);\r\n    return () => media.removeListener(listener);\r\n  }, [matches, query]);\r\n\r\n  return matches;\r\n}\r\n\r\nexport default useMediaQuery","import React, { useState } from 'react';\r\n\r\nconst useToggle = (initialState) => {\r\n    const [isToggled, setIsToggled] = useState(initialState);\r\n  \r\n    // put [setIsToggled] into the useCallback's dependencies array\r\n    // this value never changes so the callback is not going to be ever re-created\r\n    const toggle = React.useCallback(\r\n      () => setIsToggled(state => !state),\r\n      [setIsToggled],\r\n    );\r\n  \r\n    return [isToggled, toggle];\r\n  }\r\n\r\nexport default useToggle;","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from 'styled-components'\r\nimport Img from \"gatsby-image\"\r\nimport { truncate } from 'lodash'\r\nimport useToggle from '../hooks/useToggle'\r\n\r\n\r\nconst AuthorAside = ({ mobile, author, date, authorImage, authorBio }) => {\r\n    const [isToggled, setToggle] = useToggle(true);\r\n    return (\r\n      <>\r\n        <div></div>\r\n        { mobile && <Container>\r\n            <div>\r\n            <Img className=\"authorImage\" fluid={authorImage} alt={author}/>\r\n            <p className=\"content\">ABOUT</p>\r\n            <h3>{author}</h3>\r\n            <p className=\"content\">{authorBio}</p>\r\n            </div>\r\n        </Container> }\r\n        { !mobile && <MobileContainer>\r\n            <div className=\"flex\">\r\n                <Img className=\"image\" fluid={authorImage} alt={author}/>\r\n                <div>\r\n                    <h3>{author} · <span className=\"date\">{date}</span></h3>\r\n                    <a onClick={setToggle}>\r\n                        { isToggled ? <p className=\"content\">{truncate(authorBio, {\r\n                            'length': 40,\r\n                            'seperator': \" \"\r\n                        })}</p> : <p>{authorBio}</p> }\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className=\"button\">\r\n                { authorBio ? <a onClick={setToggle}>{isToggled ? \"﹀\" : \"︿\"}</a> : null }\r\n            </div>\r\n        </MobileContainer>}\r\n      </>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    text-align: left;\r\n    height: 100vh;\r\n    width: 200px;\r\n    position: fixed;\r\n    padding: 1rem;\r\n    top: 0;\r\n    h3 {\r\n        font-size: 1.2rem;\r\n        padding: 0;\r\n        margin: 0;\r\n        margin-bottom: 0.25rem;\r\n    }\r\n    .content {\r\n        color: gray;\r\n        font-size: 0.8rem;\r\n        padding: 0rem;\r\n        margin: 0;\r\n    }\r\n    .authorImage {\r\n        width: 100px;\r\n        height: 100px;\r\n        object-fit: cover;\r\n        border-radius: 50%;\r\n        margin: 0 auto 2rem auto;\r\n        position: fixed;\r\n    }\r\n`;\r\n\r\nconst MobileContainer = styled.div`\r\n    border-bottom: lightgray solid 1px;\r\n    margin-bottom: 1rem;\r\n    .flex {\r\n        display: grid;\r\n        grid-template-columns: 45px 1fr;\r\n        grid-gap: 1rem;\r\n        justify-content: center;\r\n        .image {\r\n            height: 45px;\r\n            width: 45px;\r\n            object-fit: cover;\r\n            border-radius: 50%;\r\n        }\r\n        h3 {\r\n            padding: 0;\r\n            margin: 0;\r\n            font-size: 0.9rem;\r\n        }\r\n        p {\r\n            margin: 0px 0px;\r\n            padding: 0;\r\n            font-size: 0.7rem;\r\n        }\r\n    }\r\n    a {\r\n        color: gray;\r\n        font-size: 0.8rem;\r\n        cursor: pointer;\r\n        margin: 0;\r\n        padding: 0;\r\n        \r\n    }\r\n    .button {\r\n        text-align: center;\r\n    }\r\n    .date {\r\n        color: gray;\r\n        font-size: 0.7rem;\r\n    }\r\n`;\r\n\r\nexport default AuthorAside\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\nimport AuthorAside from '../components/authorAside'\r\nimport { devices } from '../styles/devices'\r\nimport useMediaQuery from '../hooks/mediaQuery'\r\nimport Layout from '../components/layout'\r\nimport Img from \"gatsby-image\"\r\n\r\nexport default function Template({ data }) {\r\n  const { markdownRemark: post } = data\r\n  let isPageWide = useMediaQuery(devices.tablet);\r\n  const { title, authorBio, subtitle, author, date } = post.frontmatter;\r\n  const authorImage = post.frontmatter.authorImage.childImageSharp.fluid;\r\n  const featuredImage = post.frontmatter.featuredImage.childImageSharp.fluid\r\n  return (\r\n    <Layout>\r\n      <PageContainer>\r\n        { !isPageWide ? <MobileContainer>\r\n            <h1>{title}</h1>\r\n            <h2>{subtitle}</h2>\r\n          <div className=\"blog-post\">\r\n          <AuthorAside date={date} mobile={isPageWide} authorBio={authorBio} author={author} authorImage={authorImage}/> \r\n            <Img className=\"blogImage\" fluid={featuredImage} alt={title} />\r\n            <div\r\n              className=\"blog-post-content\"\r\n              dangerouslySetInnerHTML={{ __html: post.html }}\r\n            />\r\n          </div>\r\n        </MobileContainer> :\r\n        <Container>\r\n          <AuthorAside mobile={isPageWide} authorBio={authorBio} author={author} authorImage={authorImage}/> \r\n          <div className=\"blog-post\">\r\n            <h1>{title}</h1>\r\n            <h2>{subtitle}</h2>\r\n            <Img className=\"blogImage\" fluid={featuredImage} alt={title} />\r\n            <div\r\n              className=\"blog-post-content\"\r\n              dangerouslySetInnerHTML={{ __html: post.html }}\r\n            />\r\n          </div>\r\n        </Container> }\r\n      </PageContainer>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostByPath($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        date(formatString: \"MMM DD, YYYY\")\r\n        path\r\n        title\r\n        author\r\n        authorBio\r\n        subtitle\r\n        authorImage {\r\n          childImageSharp {\r\n            fluid(maxWidth: 100) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        featuredImage {\r\n          childImageSharp {\r\n            fluid(maxWidth: 600) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  text-align: left;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 0rem 2rem;\r\n  position: relative;\r\n  h1 {\r\n    font-size: 2rem;\r\n    line-height: 2.5rem;\r\n  }\r\n  h2 {\r\n    margin: 0.5rem 0rem;\r\n    font-size: 1.1rem;\r\n    color: gray;\r\n    margin-bottom: 18px;\r\n  }\r\n  .blogImage {\r\n    max-width: 664px;\r\n    max-height: 300px;\r\n    object-fit: cover;\r\n    margin-bottom: 1rem;\r\n    border-radius: 2px;\r\n    @media ${devices.tablet} { \r\n    max-height: 400px;\r\n  }\r\n  }\r\n  @media ${devices.tablet} { \r\n    grid-template-columns: 200px 4fr;\r\n  }\r\n`\r\n\r\nconst MobileContainer = styled.div`\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  text-align: left;\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 0rem 2rem;\r\n  position: relative;\r\n  h1 {\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    line-height: 2.5rem;\r\n  }\r\n  h2 {\r\n    margin: 0.5rem 0rem;\r\n    font-size: 1.1rem;\r\n    color: gray;\r\n    margin-bottom: 18px;\r\n  }\r\n  .blogImage {\r\n    max-width: 664px;\r\n    max-height: 300px;\r\n    object-fit: cover;\r\n    margin-bottom: 1rem;\r\n    border-radius: 2px;\r\n    @media ${devices.tablet} { \r\n    max-height: 400px;\r\n  }\r\n  }\r\n  @media ${devices.tablet} { \r\n    grid-template-columns: 200px 4fr;\r\n  }\r\n`\r\nconst PageContainer = styled.div`\r\n  margin: 3rem 1rem;\r\n  @media ${devices.mobileL} { \r\n    margin: 4rem;\r\n  }\r\n  @media ${devices.tablet} { \r\n    margin: 6rem 4rem;\r\n  }\r\n  @media ${devices.laptop} { \r\n    margin: 6rem;\r\n  }\r\n`;"],"sourceRoot":""}